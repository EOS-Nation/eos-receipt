// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface GetTransaction<T = unknown> {
  id:                      string;
  trx:                     GetTransactionTrx<T>;
  block_time:              string;
  block_num:               number;
  last_irreversible_block: number;
  traces:                  Trace<T>[];
}

export interface Trace<T> {
  receipt:         TraceReceipt;
  act:             Act<T>;
  elapsed:         number;
  cpu_usage:       number;
  console:         string;
  total_cpu_usage: number;
  trx_id:          string;
  inline_traces:   Trace<T>[];
}

export interface Act<T> {
  account:       string;
  name:          string;
  authorization: Authorization[];
  data:          T;
  hex_data:      string;
}

export interface Authorization {
  actor:      string;
  permission: string;
}

export interface TraceReceipt {
  receiver:        string;
  act_digest:      string;
  global_sequence: number;
  recv_sequence:   number;
  auth_sequence:   Array<Array<number | string>>;
  code_sequence:   number;
  abi_sequence:    number;
}

export interface GetTransactionTrx<T> {
  receipt: TrxReceipt;
  trx:     FluffyTrx<T>;
}

export interface TrxReceipt {
  status:          string;
  cpu_usage_us:    number;
  net_usage_words: number;
  trx:             Array<PurpleTrx | number>;
}

export interface PurpleTrx {
  signatures:               string[];
  compression:              string;
  packed_context_free_data: string;
  packed_trx:               string;
}

export interface FluffyTrx<T> {
  expiration:             string;
  ref_block_num:          number;
  ref_block_prefix:       number;
  max_net_usage_words:    number;
  max_cpu_usage_ms:       number;
  delay_sec:              number;
  context_free_actions:   any[];
  actions:                Act<T>[];
  transaction_extensions: any[];
  signatures:             string[];
  context_free_data:      any[];
}
